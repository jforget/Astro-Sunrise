#!/usr/bin/perl -I../../DateTime-Event-Sunrise/lib -I../lib
# -*- encoding: utf-8; indent-tabs-mode: nil -*-
#
#     Script to check the work-in-progress version of DateTime::Event::Sunrise
#     Copyright (c) 2020, 2021, 2023 Jean Forget
#
#     See the license in the embedded documentation below.
#

use v5.10;
use strict;
use warnings;
use DateTime;
use DateTime::Event::Sunrise;
use Astro::Sunrise;

my $lat =  42.3358; # 42°20'08"
my $lon = -71.2044; # 71°12'15"

# https://www.esrl.noaa.gov/gmd/grad/solcalc/table.php?lat=42.3358&lon=-71.2044&year=2020
my @noaa_rise = qw/ dummy 07:14 06:59 06:19 06:26 05:39 05:10
                          05:12 05:38 06:11 06:42 06:19 06:55 /;
my @noaa_set  = qw/ dummy 16:23 16:58 17:35 19:11 19:45 20:15
                          20:25 20:04 19:18 18:25 16:37 16:13 /;

my @stel_rise = qw/ dummy 07:13:59 06:58:50 06:19:23 06:26:29 05:39:27 05:10:29
                          05:12:12 05:38:00 06:10:36 06:42:29 06:18:47 06:54:51 /;
my @stel_set  = qw/ dummy 16:22:42 16:58:23 17:35:24 19:11:19 19:45:02 20:15:31
                          20:25:20 20:03:39 19:17:54 18:25:24 16:37:30 16:13:08 /;

my $sunriseset0 = DateTime::Event::Sunrise->new(
                     longitude => $lon,
                     latitude  => $lat,
                     altitude  => -0.833,
                     precise   => 0);
my $sunriseset1 = DateTime::Event::Sunrise->new(
                     longitude => $lon,
                     latitude  => $lat,
                     altitude  => -0.833,
                     precise   => 1);

my $dt = DateTime->new(
                year      => 2020,
                month     =>    1,
                day       =>    1,
                time_zone => 'America/New_York');

for my $i (1 .. 12) {
    $dt->set(month => $i);
    my ($sunrise0, $sunset0) = sunrise ( { year  => $dt->year, month   => $dt->month, day      => $dt->day,
                                          lon    => $lon,      lat     => $lat,       altitude => -0.833,
                                          tz     => -4,        precise => 0,
                                          #trace => *STDOUT,
                                        });
    my ($sunrise1, $sunset1) = sunrise ( { year  => $dt->year, month   => $dt->month, day      => $dt->day,
                                          lon    => $lon,      lat     => $lat,       altitude => -0.833,
                                          tz     => -4,        precise => 1,
                                          #trace => *STDOUT,
                                        });
    my $hms0r = $sunriseset0->sunrise_datetime($dt)->hms;
    my $hms0s = $sunriseset0->sunset_datetime ($dt)->hms;
    my $hms1r = $sunriseset1->sunrise_datetime($dt)->hms;
    my $hms1s = $sunriseset1->sunset_datetime ($dt)->hms;
    my $delta0r = sprintf "(%3d)", delta_hms($stel_rise[$i], $hms0r);
    my $delta0s = sprintf "(%3d)", delta_hms($stel_set [$i], $hms0s);
    my $delta1r = sprintf "(%3d)", delta_hms($stel_rise[$i], $hms1r);
    my $delta1s = sprintf "(%3d)", delta_hms($stel_set [$i], $hms1s);
    say join "  ", $dt->ymd, $sunrise0, $sunrise1, $noaa_rise[$i],$stel_rise[$i], "$hms0r $delta0r", "$hms1r $delta1r"
                           , $sunset0 , $sunset1,  $noaa_set [$i],$stel_set [$i], "$hms0s $delta0s", "$hms1s $delta1s"
};

sub delta_hms {
  my ($hms1, $hms2) = @_;
  return to_sec($hms2) - to_sec($hms1);
}
sub to_sec {
  my ($hms) = @_;
  my ($hh, $mm, $ss) = split ':', $hms;
  return (60 * $hh + $mm) * 60 + $ss;
}

__END__



=encoding utf8

=head1 NAME

check-Boston-2020 - Comparing the work-in-progress version of DateTime::Event::Sunrise with Stellarium and the NOAA website

=head1 DESCRIPTION

This   program   runs    the   not-yet-released-to-CPAN   version   of
DT::E::Sunrise, by computing the sunrise and sunset times in Boston in
April  2020, and  comparing with  values copied-pasted  from the  NOAA
solar calculator webpage and from Stellarium.

This program displays the values for sunrise and sunset produced by:

=over 4

=item * L<Astro::Sunrise>, basic algorithm

=item * L<Astro::Sunrise>, precise algorithm

=item * The NOAA solar calculator webpage

=item * Stellarium

=item * L<DateTime::Event::Sunrise>, basic algorithm

=item * L<DateTime::Event::Sunrise>, precise algorithm

=back

In the last two cases, the  program computes the difference in seconds
with the Stellarium value.

=head2 Why Boston? Why 2020?

Because there was a bug report for DT::E::Sunrise with precisely these
values (actually only April 2020).

=head2 Data From Stellarium

  Date
  2020-01-01  07:13:59   16:22:42
  2020-02-01  06:58:50   16:58:23
  2020-03-01  06:19:23   17:35:24
  2020-04-01  06:26:29   19:11:19
  2020-05-01  05:39:27   19:45:02
  2020-06-01  05:10:29   20:15:31
  2020-07-01  05:12:12   20:25:20
  2020-08-01  05:38:00   20:03:39
  2020-09-01  06:10:36   19:17:54
  2020-10-01  06:42:29   18:25:24
  2020-11-01  06:18:47   16:37:30
  2020-12-01  06:54:51   16:13:08

=head1 SEE ALSO

L<https://github.com/jforget/DateTime-Event-Sunrise/issues/1>

L<https://www.esrl.noaa.gov/gmd/grad/solcalc/table.php?lat=42.3358&lon=-71.2044&year=2020>

L<http://stellarium.org/>

=head1 COPYRIGHT

Copyright  (c)  2020, 2021, 2023 Jean  Forget.  All rights  reserved.  This
program is  free software;  you can redistribute  it and/or  modify it
under the same  terms as Perl itself: GNU Public  License version 1 or
later and Perl Artistic License.

The full text of the license can be found in the F<LICENSE> file at
L<https://dev.perl.org/licenses/artistic.html>
and L<https://www.gnu.org/licenses/gpl-1.0.html>.

Here is the summary of GPL:

This program is  free software; you can redistribute  it and/or modify
it under the  terms of the GNU General Public  License as published by
the Free  Software Foundation; either  version 1, or (at  your option)
any later version.

This program  is distributed in the  hope that it will  be useful, but
WITHOUT   ANY  WARRANTY;   without  even   the  implied   warranty  of
MERCHANTABILITY  or FITNESS  FOR A  PARTICULAR PURPOSE.   See  the GNU
General Public License for more details.

You  should have received  a copy  of the  GNU General  Public License
along with this program; if not, see <https://www.gnu.org/licenses/> or
write to the Free Software Foundation, Inc., L<https://fsf.org>.

