#!/usr/bin/perl
# -*- encoding: utf-8; indent-tabs-mode: nil -*-
#
#     Building the source for test-04d,
#     which in turn will build the expected result for 04basic.t
#     Copyright (C) 2013, 2017, 2021 Jean Forget
#
#     This program is distributed under the same terms as Perl 5.16.3:
#     GNU Public License version 1 or later and Perl Artistic License
#
#     You can find the text of the licenses in the F<LICENSE> file or at
#     L<https://dev.perl.org/licenses/artistic.html>
#     and L<https://www.gnu.org/licenses/gpl-1.0.html>.
#
#     Here is the summary of GPL:
#
#     This program is free software; you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation; either version 1, or (at your option)
#     any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program; if not, write to the Free Software Foundation,
#     Inc., <https://www.fsf.org/>.
#

use v5.10;
use strict;
use warnings;

my $fic_c    = 'sunriset.c';
my $fic_test = 'test-04d.c';

open my $ft, '>', $fic_test
  or die "opening $fic_test $!";
open my $fc, '<', $fic_c
  or die "opening $fic_c $!";

# Copying Paul Schlyter's code, excluding the main function
my $copie = 1;
while (<$fc>) {
  if (/^main()/) {
    $copie = 0;
    next;
  }
  if ($copie) {
    print $ft $_;
    next;
  }
  if (/^}/) {
    $copie = 1;
    next;
  }
}
close $fc
  or die "closing $fic_c $!";

# New C code, including the main function
# This code mimics what happens in t/04basic.t, so the expected result
# will be computed by Paul Schlyter's code and the "got" result will be computed
# by the Perl module. So 04basic.t checks the consistency of the C and Perl algorithms.
print $ft <<'EOF';
// Beginning of code not from Paul Schlyter
double round3(double x)
{
  return floor(0.5 + 1000 * x) / 1000;
}
test(int year, int month, int day, char * city, int ltd, int ltm, char ltc, int lgd, int lgm, char lgc, double height, int upper_limb, char * height_alpha)
{
  double lg, lt;
  double rise, set;
  int rs, rise_h, rise_m, rise_s, set_h, set_m, set_s;
  switch(lgc)
    {
      case 'E':
        lg = round3(lgd + lgm / 60.0);
        break;
      case 'W':
        lg = - round3(lgd + lgm / 60.0);
        break;
    }
  switch(ltc)
    {
      case 'N':
        lt = round3(ltd + ltm / 60.0);
        break;
      case 'S':
        lt = - round3(ltd + ltm / 60.0);
        break;
    }
   rs = __sunriset__(year, month, day, lg, lt, height, upper_limb, &rise, &set);
   rise_h  = floor(rise);
   rise_m  = floor(60 * (rise - rise_h));
   rise_s  = floor(60 * (60 * (rise - rise_h) - rise_m));
   set_h   = floor(set);
   set_m   = floor(60 * (set - set_h));
   set_s   = floor(60 * (60 * (set - set_h) - set_m));
/*
   rise_h += floor(lg / 15);
   set_h  += floor(lg / 15);
   if (rise_m >= 60) 
     {
       rise_m -= +60;
       rise_h ++;
     }
   if (set_m >= 60) 
     {
       set_m -= +60;
       set_h ++;
     }
   if (lgc == 'W')
     {
       rise_h ++;
       set_h  ++;
     }
*/
   printf("%4d %2d %2d %-20s %2d %2d %c %3d %2d %c %-10s %d ", year, month, day, city, ltd, ltm, ltc, lgd, lgm, lgc, height_alpha, upper_limb);
   printf("sunrise: %02d:%02d:%02d sunset: %02d:%02d:%02d", rise_h, rise_m, rise_s, set_h, set_m, set_s);
   if (rs != 0) {
     printf(" polar night or midnight sun");
   }
  printf("\n");

}
main ()
{

EOF
for my $date ([ 2013,  1,  1],
              [ 2013,  3, 21],
              [ 2013,  6, 21],
              [ 2013,  8, 31],
              [ 2013,  9, 21],
              [ 2013, 12, 31],
             ) {
  for my $loc ([ "Greenwich", 51, 28, 'N',  0,  0, 'E'],
               [ "Reykjavik", 64,  4, 'N', 21, 58, 'W'],
               [ "Quito",      0, 15, 'S', 78, 35, 'W'],
               [ "El_Hierro", 27, 44, 'N', 18,  3, 'W'],
              ) {
    my ($city, $ltd, $ltm, $ltc, $lgd, $lgm, $lgc) = @$loc;
    for my $height (qw(10 0 -0.583 -0.833 -12 -18)) {
      for my $upper_limb (0, 1) {
        printf $ft qq<test(%4d, %2d, %2d, "%s", %2d, %2d, '%s', %3d, %2d, '%s', %f, %d, "%s");\n>, @$date, @$loc, $height, $upper_limb, "$height";
      }
    }
  }
}

print $ft "}\n";
close $ft
  or die "closing $fic_test $!";
exit(0);

=head1 NAME

mktest -- Making C source file for building DT::E::Sunrise Perl test file

=head1 USAGE

  ./mktest-04d
  cc test-04d.c -lm -o test-04d
  ./test-04d > result-04d

and then copy-paste from result-04d to ../DT::E::Sunrise/t/04basic.t
